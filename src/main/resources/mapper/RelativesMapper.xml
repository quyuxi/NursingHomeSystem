<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="server.dao.RelativesDao">
    <resultMap id="BaseResultMap" type="server.pojo.Relative">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="Id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="elder_id" jdbcType="INTEGER" property="elderId"/>
    </resultMap>


    <delete id="deleteByElderId" parameterType="java.lang.Integer">
        delete
        from Relative
        where elderId = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="server.pojo.Relative" useGeneratedKeys="true">
        insert into Relative (`name`, sex, birthday,
                               phone, idCard, address,
                               elderId)
        values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
                #{phone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
                #{elderId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="server.pojo.Relative"
            useGeneratedKeys="true">
        insert into Relative
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="idCard != null">
                Id_card,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="elderId != null">
                elder_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="elderId != null">
                #{elderId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="server.pojo.Relative">
        update Relative
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                Id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="elderId != null">
                elder_id = #{elderId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="server.pojo.Relative">
        update Relative
        set `name`   = #{name,jdbcType=VARCHAR},
            sex      = #{sex,jdbcType=VARCHAR},
            birthday = #{birthday,jdbcType=DATE},
            phone    = #{phone,jdbcType=VARCHAR},
            idCard  = #{idCard,jdbcType=VARCHAR},
            address  = #{address,jdbcType=VARCHAR},
            elderId = #{elderId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>